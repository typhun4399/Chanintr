import os
from collections import defaultdict
from difflib import SequenceMatcher

# ---- Path ‡∏´‡∏•‡∏±‡∏Å ----
base_path = r"G:\Shared drives\Data Management\1_Daily Operation\3. 2D & 3D files\1_MNT"
output_file = r"C:\Users\tanapat\Desktop\similar_folders_report.txt"

# ---- ‡πÄ‡∏Å‡πá‡∏ö prefix -> ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ folder ----
prefix_dict = defaultdict(list)

for folder in os.listdir(base_path):
    folder_path = os.path.join(base_path, folder)
    if not os.path.isdir(folder_path):
        continue

    # ‡πÅ‡∏¢‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏±‡∏á "_" (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢ _ ‡πÄ‡∏≠‡∏≤‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏£‡∏Å‡∏´‡∏•‡∏±‡∏á _)
    parts = folder.split("_")
    prefix = parts[1] if len(parts) > 1 else folder
    prefix_dict[prefix].append(folder)

# ---- ‡πÄ‡∏ä‡πá‡∏Ñ exact match (prefix ‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡∏ï‡∏£‡∏á ‡πÜ) ----
exact_duplicates = {pre: names for pre, names in prefix_dict.items() if len(names) > 1}

# ---- ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ô (fuzzy) ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ SequenceMatcher ----
similar_pairs = []
prefixes = list(prefix_dict.keys())
for i in range(len(prefixes)):
    for j in range(i + 1, len(prefixes)):
        ratio = SequenceMatcher(None, prefixes[i], prefixes[j]).ratio()
        if ratio >= 0.8:  # ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡πÑ‡∏î‡πâ
            similar_pairs.append((prefixes[i], prefixes[j], ratio))

# ---- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏á txt ----
with open(output_file, "w", encoding="utf-8") as f:
    f.write("üîπ Exact duplicates (prefix ‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡∏ï‡∏£‡∏á ‡πÜ):\n")
    if not exact_duplicates:
        f.write("  ‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ prefix ‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡∏ï‡∏£‡∏á ‡πÜ\n\n")
    else:
        for pre, names in exact_duplicates.items():
            f.write(f"‚ñ∂ {pre} ({len(names)} folders)\n")
            for folder in names:
                f.write(f"    - {folder}\n")
        f.write("\n")

    f.write("üîπ Similar folders (prefix ‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ô):\n")
    if not similar_pairs:
        f.write("  ‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ prefix ‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ô\n")
    else:
        for p1, p2, ratio in similar_pairs:
            f.write(f"  '{p1}' ~ '{p2}' (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢ {ratio:.2f})\n")

print(f"‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà: {output_file}")
