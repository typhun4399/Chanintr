import os
import zipfile
import shutil
from send2trash import send2trash  # ‚úÖ ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏ñ‡∏±‡∏á‡∏Ç‡∏¢‡∏∞

# üóÇ path ‡∏´‡∏•‡∏±‡∏Å
base_path = r"D:\MNT"

# üîç ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ó‡∏∏‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢‡πÉ‡∏ô path
for root, dirs, files in os.walk(base_path):
    if "_MACOSX" in root:
        continue

    for file in files:
        if file.endswith(".zip"):
            zip_path = os.path.join(root, file)
            extract_folder = root
            print(f"üì¶ ‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå ZIP: {zip_path}")

            try:
                # üîì ‡πÅ‡∏ï‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô _MACOSX/
                with zipfile.ZipFile(zip_path, 'r') as zip_ref:
                    for member in zip_ref.namelist():
                        if member.startswith("_MACOSX/"):
                            continue
                        zip_ref.extract(member, extract_folder)

                # üóëÔ∏è ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå ZIP ‡πÑ‡∏õ‡∏ñ‡∏±‡∏á‡∏Ç‡∏¢‡∏∞
                send2trash(zip_path)
                print(f"‚ôªÔ∏è ‡∏¢‡πâ‡∏≤‡∏¢ ZIP ‡πÑ‡∏õ‡∏ñ‡∏±‡∏á‡∏Ç‡∏¢‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: {zip_path}")

                # üßπ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå _MACOSX ‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏ï‡∏Å‡πÑ‡∏ü‡∏•‡πå ‡πÉ‡∏´‡πâ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏ñ‡∏±‡∏á‡∏Ç‡∏¢‡∏∞‡∏î‡πâ‡∏ß‡∏¢
                macosx_path = os.path.join(extract_folder, "_MACOSX")
                if os.path.exists(macosx_path):
                    send2trash(macosx_path)
                    print(f"üßπ ‡∏¢‡πâ‡∏≤‡∏¢‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå _MACOSX ‡πÑ‡∏õ‡∏ñ‡∏±‡∏á‡∏Ç‡∏¢‡∏∞: {macosx_path}")

            except Exception as e:
                print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏±‡∏ö {zip_path}: {e}")
