import os
import pandas as pd

def update_excel_based_on_2d_3d_datasheet(
    base_folder_path, excel_file_path, output_excel_file_path=None
):
    if output_excel_file_path is None:
        output_excel_file_path = excel_file_path

    # ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel
    try:
        df = pd.read_excel(excel_file_path)
        print(f"‚úÖ ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel '{excel_file_path}' ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
    except FileNotFoundError:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå Excel ‡∏ó‡∏µ‡πà '{excel_file_path}'")
        return
    except Exception as e:
        print(f"‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô Excel: {e}")
        return

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    status_col = "2D/ 3D/ Datasheet"
    notes_col = "Notes"
    required_cols = ["id", status_col, notes_col]
    for col in required_cols:
        if col not in df.columns:
            print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå '{col}' ‡πÉ‡∏ô Excel")
            return

    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    if not df.empty:
        df[status_col] = "N"
        df[notes_col] = ""
        print(f"‚û°Ô∏è ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤ '{status_col}' = 'N', '{notes_col}' = ''")
    else:
        print("‚ö†Ô∏è DataFrame ‡∏ß‡πà‡∏≤‡∏á")
        return

    # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° id ‡πÉ‡∏´‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
    df["id_str"] = df["id"].astype(str).str.strip()

    # ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏ô path
    subdirectories = [
        d for d in os.listdir(base_folder_path)
        if os.path.isdir(os.path.join(base_folder_path, d))
    ]

    def has_files(path):
        return os.path.exists(path) and any(
            os.path.isfile(os.path.join(path, f)) for f in os.listdir(path)
        )

    for i, row in df.iterrows():
        folder_id = str(row["id"]).strip()
        matched_folders = [f for f in subdirectories if f.split("_")[0] == folder_id]

        if matched_folders:
            found_any = False
            notes_list = []

            for sub_folder in matched_folders:
                folder_path = os.path.join(base_folder_path, sub_folder)
                print(f"‚û°Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå '{sub_folder}' (prefix: '{folder_id}')")

                path_2d = os.path.join(folder_path, "2D")
                path_3d = os.path.join(folder_path, "3D")
                path_ds = os.path.join(folder_path, "Datasheet")

                has_2d = has_files(path_2d)
                has_3d = has_files(path_3d)
                has_ds = has_files(path_ds)

                # ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå ‚Üí ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Y
                if has_2d or has_3d or has_ds:
                    found_any = True

                # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà "‡πÑ‡∏°‡πà‡∏°‡∏µ"
                if not has_2d:
                    notes_list.append("‡πÑ‡∏°‡πà‡∏°‡∏µ2D")
                if not has_3d:
                    notes_list.append("‡πÑ‡∏°‡πà‡∏°‡∏µ3D")
                # ‚ö° Datasheet: ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å "‡πÑ‡∏°‡πà‡∏°‡∏µDatasheet" ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå
                if not has_ds:
                    notes_list.append("‡πÑ‡∏°‡πà‡∏°‡∏µDatasheet")

            if found_any:
                df.at[i, status_col] = "Y"
            else:
                df.at[i, status_col] = "N"
                notes_list = ["‡πÑ‡∏°‡πà‡∏°‡∏µ2D", "‡πÑ‡∏°‡πà‡∏°‡∏µ3D", "‡πÑ‡∏°‡πà‡∏°‡∏µDatasheet"]

            # ‚úÖ ‡∏£‡∏ß‡∏° notes ‡πÇ‡∏î‡∏¢‡∏ï‡∏±‡∏î‡∏ã‡πâ‡∏≥
            df.at[i, notes_col] = "/".join(sorted(set(notes_list)))

        else:
            # ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö ID
            df.at[i, status_col] = "N"
            df.at[i, notes_col] = "‡πÑ‡∏°‡πà‡∏°‡∏µ2D/‡πÑ‡∏°‡πà‡∏°‡∏µ3D/‡πÑ‡∏°‡πà‡∏°‡∏µDatasheet"
            print(f"   ‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö ID '{folder_id}'")

    df.drop(columns=["id_str"], inplace=True)

    try:
        df.to_excel(output_excel_file_path, index=False)
        print(f"\n‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: {output_excel_file_path}")
    except Exception as e:
        print(f"\n‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå: {e}")


# üîß ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
base_folder_path = r"D:\VCT\2D&3D"
excel_file_path = r"C:\Users\tanapat\Downloads\1_VCT & VCC_id no to review 2D-3D_Aug25.xlsx"
update_excel_based_on_2d_3d_datasheet(base_folder_path, excel_file_path)
