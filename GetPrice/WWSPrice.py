import time
import pandas as pd
import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

# ---------------- CONFIG ----------------
excel_input = r"C:\Users\tanapat\Downloads\WWS_model id to get 2D-3D_20Aug25_Test.xlsx"

# ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå Excel
df = pd.read_excel(excel_input)
search_list = df['style'].dropna().astype(str).tolist()  # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ 'style' ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå Price ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
if "Price" not in df.columns:
    df["Price"] = ""

# --- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Chrome Driver ---
options = uc.ChromeOptions()
options.add_argument("--start-maximized")
options.add_argument("--disable-popup-blocking")
options.add_argument("--disable-notifications")
options.add_argument("--disable-extensions")

driver = uc.Chrome(options=options)
wait = WebDriverWait(driver, 20)

try:
    for idx, vid_search in enumerate(search_list):
        driver.get("https://www.waterworks.com/us_en/")
        time.sleep(2)

        # --- ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ autocomplete ---
        search_box = wait.until(EC.element_to_be_clickable((By.XPATH, "//form/div[2]")))
        search_box.click()
        search_input = wait.until(EC.element_to_be_clickable((By.XPATH, "//form/div[2]/input")))
        search_input.clear()
        search_input.send_keys(vid_search)
        time.sleep(1)

        # ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏£‡∏Å
        try:
            first_item = wait.until(
                EC.element_to_be_clickable((By.XPATH, "//ol/li[1]/div/div[1]"))
            )
            first_item.click()
            time.sleep(2)
        except:
            pass
            time.sleep(3)

        # --- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ homepage ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ---
        if driver.current_url.rstrip("/") == "https://www.waterworks.com/us_en":
            print(f"‚ö†Ô∏è {vid_search}: ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ‡∏≠‡∏±‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ")
            df.loc[idx, "Price"] = ""
            continue

        # --- ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏ß‡∏ô‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏≤‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á) ---
        price = ""
        max_retries = 10  # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏≠‡∏á
        retry_count = 0

        while (price == "") and (retry_count < max_retries):
            try:
                price_element = driver.find_element(
                    By.XPATH,
                    "/html/body/div[2]/main/div[3]/div/div/div[1]/div[2]/div/div/div[4]/div[1]/div/span/span[1]"
                )
                price = price_element.text.strip()
                if price:
                    print(f"üí∞ {vid_search}: ‡∏£‡∏≤‡∏Ñ‡∏≤ = {price}")
                    break
            except:
                pass

            retry_count += 1
            time.sleep(1)  # ‡∏£‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà

        if price == "":
            print(f"‚ö†Ô∏è {vid_search}: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏≠‡∏á {max_retries} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á")

        df.loc[idx, "Price"] = price

    # --- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Excel ---
    df.to_excel(excel_input, index=False)
    print("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡∏á Excel ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")

finally:
    driver.quit()
